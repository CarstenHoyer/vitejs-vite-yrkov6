/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.0.9 -t -k --shadows --draco /opt/homebrew/opt/draco --transform carl.glb
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    ['low-poly-carl-jacobsen']: THREE.Mesh;
  };
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements['group']) {
  // @ts-ignore
  const { nodes } = useGLTF('/carl-transformed.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        name="low-poly-carl-jacobsen"
        castShadow
        receiveShadow
        geometry={nodes['low-poly-carl-jacobsen'].geometry}
      >
        <meshStandardMaterial color="hotpink" />
      </mesh>
    </group>
  );
}

useGLTF.preload('/carl-transformed.glb');
